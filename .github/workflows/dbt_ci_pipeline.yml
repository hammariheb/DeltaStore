name: dbt CI test pipeline

on:
  pull_request:
    branches:
      - main  
    paths:
        - 'deltastore_dbt_transformation/**'  
  workflow_dispatch:

jobs:
  dbt_run:
    runs-on: windows-latest  # Switched from ubuntu-latest to windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2  

      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.12' 

      - name: Install SQL Server ODBC Driver and sqlcmd
        run: |
          choco install sqlserver-cmdlineutils -y
          choco install microsoft-odbc-driver-for-sql-server -y
        shell: powershell

      - name: Verify sqlcmd installation
        run: |
          sqlcmd -? # Check if sqlcmd is installed
        shell: powershell

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install dbt-sqlserver==1.8.7

      - name: Set up environment variables
        shell: powershell
        run: |
            echo "DBT_HOST=${{ secrets.DBT_HOST }}" | Out-File -Append $env:GITHUB_ENV
            echo "DBT_USER=${{ secrets.DBT_USER }}" | Out-File -Append $env:GITHUB_ENV
            echo "DBT_PASSWORD=${{ secrets.DBT_PASSWORD }}" | Out-File -Append $env:GITHUB_ENV
            echo "DBT_DATABASE=${{ secrets.DBT_DATABASE }}" | Out-File -Append $env:GITHUB_ENV

      - name: Verify environment variables
        run: |
            echo "DBT_HOST=$env:DBT_HOST"
            echo "DBT_USER=$env:DBT_USER"
            echo "DBT_DATABASE=$env:DBT_DATABASE"
        shell: powershell

      - name: Create profiles.yml
        run: |
            New-Item -ItemType Directory -Path $env:USERPROFILE\.dbt -Force
            Set-Content -Path "$env:USERPROFILE\.dbt\profiles.yml" -Value @"
            deltastore_dbt_transformation:
              target: dev
              outputs:
                dev:
                  driver: ODBC Driver 17 for SQL Server
                  server: '$env:DBT_HOST'
                  user: "$env:DBT_USER"
                  password: '$env:DBT_PASSWORD'
                  database: '$env:DBT_DATABASE'
                  schema: raw
                  trust_cert: true
                  type: sqlserver
                  port: 60293
                  threads: 8
                  login_timeout: 60 
            "@
        shell: powershell

      - name: Verify profiles.yml creation
        run: Get-Content "$env:USERPROFILE\.dbt\profiles.yml"
        shell: powershell

      - name: Check dbt connection
        run: |
          cd deltastore_dbt_transformation
          dbt debug 
        shell: powershell

      - name: Install dbt project dependencies
        run: |
          cd deltastore_dbt_transformation
          dbt deps 
        shell: powershell
      
      - name: Run all models with state modified (slim CI)
        run: |
          cd deltastore_dbt_transformation
          dbt run --state:modified+
        shell: powershell
