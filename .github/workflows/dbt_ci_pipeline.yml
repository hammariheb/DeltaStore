name: dbt CI test pipeline

on:
  pull_request:
    branches:
      - main  
    paths:
        - 'deltastore_dbt_transformation/**'  
  workflow_dispatch:

jobs:
  dbt_run:
    runs-on: ubuntu-latest 
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2  

      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.12' 

      - name: Install SQL Server ODBC driver
        run: |
          sudo apt-get update
          sudo apt-get install -y unixodbc-dev
          sudo apt-get install -y gnupg2 curl
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y msodbcsql17

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install dbt-sqlserver==1.8.7

      - name: Set up environment variables
        run: |
            echo "DBT_HOST=${{ secrets.DBT_HOST }}" >> $GITHUB_ENV
            echo "DBT_USER=${{ secrets.DBT_USER }}" >> $GITHUB_ENV
            echo "DBT_PASSWORD=${{ secrets.DBT_PASSWORD }}" >> $GITHUB_ENV
            echo "DBT_DATABASE=${{ secrets.DBT_DATABASE }}" >> $GITHUB_ENV
  
      - name: Verify environment variables
        run: |
            echo "DBT_HOST=$DBT_HOST"
            echo "DBT_USER=$DBT_USER"
            echo "DBT_DATABASE=$DBT_DATABASE"
  
      - name: Create profiles.yml
        run: |
            mkdir -p ~/.dbt
            cat <<EOF > ~/.dbt/profiles.yml
            deltastore_dbt_transformation:
              target: dev
              outputs:
                dev:
                  type: sqlserver
                  driver: "ODBC Driver 17 for SQL Server"
                  server: "\"$DBT_HOST\""
                  user: "$DBT_USER"
                  password: "$DBT_PASSWORD"
                  database: "$DBT_DATABASE"
                  schema: "raw"
                  trust_cert: true
            EOF
  

      - name: Verify profiles.yml creation
        run: cat ~/.dbt/profiles.yml

      - name: Change directory to dbt project
        run: cd deltastore_dbt_transformation && pwd

      - name: Check dbt connection
        run: |
          cd deltastore_dbt_transformation
          dbt debug  # Cette commande vérifiera la connexion à la base de données

      - name: Install dbt project dependencies
        run: |
          cd deltastore_dbt_transformation
          dbt deps 
      
      - name: Test all models
        run: |
          cd deltastore_dbt_transformation
          dbt test
