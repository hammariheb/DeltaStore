name: dbt CI test pipeline

on:
  pull_request:
    branches:
      - main  
    paths:
      - 'deltastore_dbt_transformation/**'  
  workflow_dispatch:

jobs:
  dbt_run:
    runs-on: ubuntu-latest
    
    steps:
      # Checkout code from GitHub repository
      - name: Checkout code
        uses: actions/checkout@v2  

      # Set up Python 3.x
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.12' 

      - name: Install sqlcmd
        run: |
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y mssql-tools unixodbc-dev
          
      - name: Install SQL Server using Particular action
        uses: Particular/install-sql-server-action@v1.2.0
        with:
          connection-string-env-var: SQL_SERVER_CONNECTION_STRING
          sqlserver-version: 2019
          catalog: deltastore_db


      # Install DBT dependencies
      - name: Install DBT dependencies
        run: |
          python -m pip install --upgrade pip
          pip install dbt-sqlserver==1.8.7

      # Set up environment variables (using GitHub Secrets for credentials)
      - name: Set up environment variables
        run: |
            echo "DBT_HOST=${{ secrets.DBT_HOST }}" >> $GITHUB_ENV
            echo "DBT_USER=${{ secrets.DBT_USER }}" >> $GITHUB_ENV
            echo "DBT_PASSWORD=${{ secrets.DBT_PASSWORD }}" >> $GITHUB_ENV
            echo "DBT_DATABASE=${{ secrets.DBT_DATABASE }}" >> $GITHUB_ENV

      # Create profiles.yml dynamically for DBT connection
      - name: Create profiles.yml
        run: |
            mkdir -p ~/.dbt
            cat <<EOF > ~/.dbt/profiles.yml
            deltastore_dbt_transformation:
              target: dev
              outputs:
                dev:
                  driver: ODBC Driver 17 for SQL Server
                  server: '$DBT_HOST'
                  user: "$DBT_USER"
                  password: '$DBT_PASSWORD'
                  database: '$DBT_DATABASE'
                  schema: raw
                  trust_cert: true
                  type: sqlserver
                  port: 60293
                  threads: 8
                  login_timeout: 60 
            EOF

      # Verify profiles.yml creation
      - name: Verify profiles.yml creation
        run: cat ~/.dbt/profiles.yml

      # Check DBT connection 
      - name: Check dbt connection
        run: |
          cd deltastore_dbt_transformation
          dbt debug 

      # Install DBT project dependencies 
      - name: Install dbt project dependencies
        run: |
          cd deltastore_dbt_transformation
          dbt deps 

      # Run all models modified models in the DBT project (slim CI)
      - name: Test all models
        run: |
          cd deltastore_dbt_transformation
          dbt run state:modified+
